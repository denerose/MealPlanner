// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Meal {
  id              Int          @id @default(autoincrement())
  mealName        String       @unique
  description     String?
  ingredients     Ingredient[]
  isHighCarb      Boolean      @default(false)
  isHighVeg       Boolean      @default(false)
  makesLunch      Boolean      @default(false)
  isCreamy        Boolean      @default(false)
  isAcidic        Boolean      @default(false)
  outdoorCooking  Boolean      @default(false)
  MealPlan        MealPlan[]   @relation("dinner")
  MealPlanLunches MealPlan[]   @relation("lunch")
}

model Ingredient {
  id             Int    @id @default(autoincrement())
  ingredientName String @unique
  relatedMeals   Meal[]
}

// model IngredientsInMeals {
//   meal         Meal       @relation(fields: [mealId], references: [id])
//   mealId       Int // relation scalar field (used in the `@relation` attribute above)
//   ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
//   ingredientId Int // relation scalar field (used in the `@relation` attribute above)

//   @@id([mealId, ingredientId])
// }

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model MealPlan {
  id      Int    @id @default(autoincrement())
  date    String @unique
  day     String
  dinner  Meal?  @relation(fields: [mealId], references: [id], name: "dinner")
  lunch   Meal?  @relation(fields: [lunchId], references: [id], name: "lunch")
  mealId  Int?
  lunchId Int?
}

model Settings {
  preset    String  @id
  lunchRule Boolean
  carbRule  Boolean
  acidRule  Boolean
}

model LunchDays {
  preset    String  @id
  monday    Boolean
  tuesday   Boolean
  wednesday Boolean
  thursday  Boolean
  friday    Boolean
  saturday  Boolean
  sunday    Boolean
}
